version: 0.2

env:
  variables:
    APP_VERSION: 0.0.1

phases:
  install:
    runtime-versions:
      dotnet: 6.0
  pre_build:
    commands:
      - ECR_HOST=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - ECR_REPO=$ECR_HOST
      - SNS_TOPIC=arn:aws:sns:$AWS_DEFAULT_REGION:$AWS_ACCOUNT_ID:dass-hello-topic
      - NAME=dotnet-hello-world:$APP_VERSION-$CODEBUILD_RESOLVED_SOURCE_VERSION
      - TAGNAME=dotnet-hello-world:$APP_VERSION 
      - echo $AWS_DEFAULT_REGION $AWS_ACCOUNT_ID 
      - echo $ECR_REPO $SNS_TOPIC

  build:
    commands:
      - echo Build started on `date`
      - cd src
      - dotnet build MyApp
      - dotnet test MyApp.Test --logger "trx;LogFileName=hello-world.trx"
      - dotnet publish MyApp -c Release -p:UseAppHost=false -o publish
      - echo Building the Docker image $NAME...          
      - docker build -t $NAME .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image $NAME...
      - docker save $NAME -o hello-world.tar 
      - |
        if [ $SAVE_IMAGE = "true" ]; then
          echo Logging in to Amazon ECR...
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_HOST
          docker tag $NAME $ECR_REPO/$TAGNAME
          docker push $ECR_REPO/$TAGNAME
        fi 
#      - aws sns publish --topic-arn ${SNS_TOPIC} --message "Build ${CODEBUILD_BUILD_ID} done."

reports:
  codebuild-report-group:
    discard-paths: yes
    file-format: VISUALSTUDIOTRX
    files:
      - MyApp.Test/TestResults/hello-world.trx

artifacts:
  name: hello-$APP_VERSION
  discard-paths: yes
  files:
    - src/hello-world.tar
    - src/MyApp.Test/TestResults/hello-world.trx
    