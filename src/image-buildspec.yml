version: 0.2

env:
  variables:
    APP_VERSION: 0.0.1
#  parameter-store:
#    ARTIFACTORY_USER: arn:aws:ssm:$AWS_DEFAULT_REGION:$AWS_ACCOUNT_ID:parameter/UserName
#  secrets-manager:
#    ARTIFACTORY_TOKEN: arn:aws:secretsmanager:$AWS_DEFAULT_REGION:$AWS_ACCOUNT_ID:secret:secrets-name:TOKEN

phases:
#  install:
#    commands:
#      - dnf install dotnet-sdk-6.0
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo $AW_DEFAULT_REGION
      - echo $AWS_ACCOUNT_ID
      - aws ecr get-login-password
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
#      - echo dummy user=$ARTIFACTORY_USER token=$ARTIFACTORY_TOKEN...
      - cd src
      - dotnet build MyApp
      - dotnet test MyApp.Test --logger "trx;LogFileName=hello-world.trx"
      - dotnet publish MyApp -c Release -p:UseAppHost=false -o publish
      - name=dotnet-hello-world:$APP_VERSION-$CODEBUILD_RESOLVED_SOURCE_VERSION
      - echo Building the Docker image $name...          
      - docker build -t $name .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image $name...
      - |
        if [ $SAVE_IMAGE = "true" ]; then
          docker tag $name $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$name
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$name
          docker save $name -o hello-world.tar 
        fi 
    finally:
      - |
        if [ $SAVE_IMAGE != "true"]; then
          docker rmi $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$name
        fi

reports:
  hello-report-group:
    files:
      - hello-world.trx

artifacts:
  name: hello-$APP_VERSION
  files:
    - hello-world.tar
    